"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import secrets

from pathlib import Path

from configurations import Configuration

class Base(Configuration):
    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    BASE_DIR = Path(__file__).resolve().parent.parent

    # The tool's home dir on Toolforge. This dir is available to the application at runtime, but not during the build.
    TOOL_DATA_DIR = Path(os.environ.get('TOOL_DATA_DIR', BASE_DIR))
 
    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

    # Django requires a unique secret key for each Django app, that is used by several of its
    # security features. To simplify initial setup (without hardcoding the secret in the source
    # code) we set this to a random value every time the app starts. However, this will mean many
    # Django features break whenever an app restarts (for example, sessions will be logged out).
    # In your production apps you should set the `DJANGO_SECRET_KEY` env var explicitly.
    # Make sure to use a long unique value, like you would for a password. See:
    # https://docs.djangoproject.com/en/4.2/ref/settings/#std-setting-SECRET_KEY
    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = os.environ.get(
        "DJANGO_SECRET_KEY",
        default=secrets.token_urlsafe(nbytes=64),
    )

    CSRF_TRUSTED_ORIGINS = ['https://editengine.toolforge.org', 'https://django-test.toolforge.org']
    # CSRF_COOKIE_SECURE = True
    # SESSION_COOKIE_SECURE = True

    # Application definition
    INSTALLED_APPS = [
        # Use WhiteNoise's runserver implementation instead of the Django default, for dev-prod parity.
        'whitenoise.runserver_nostatic',
        'django.contrib.staticfiles',
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        # Django doesn't support serving static assets in a production-ready way, so we use the
        # WhiteNoise package to do so instead. The WhiteNoise middleware must be listed
        # after Django's `SecurityMiddleware` so that security redirects are still performed.
        # See: https://whitenoise.readthedocs.io
        'whitenoise.middleware.WhiteNoiseMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = 'mysite.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [BASE_DIR / "templates"],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                ],
            },
        },
    ]

    WSGI_APPLICATION = 'mysite.wsgi.application'

    # No authentication needed for this API


    # Internationalization
    # https://docs.djangoproject.com/en/4.2/topics/i18n/
    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'Europe/Paris'

    USE_I18N = True

    USE_TZ = True


    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/4.2/howto/static-files/

    STATIC_URL = '/static/'
    STATIC_ROOT = BASE_DIR / 'static'

    STORAGES = {
        # Enable WhiteNoise's GZip and Brotli compression of static assets:
        # https://whitenoise.readthedocs.io/en/latest/django.html#add-compression-and-caching-support
        "staticfiles": {
            "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
        },
    }

    # Don't store the original (un-hashed filename) version of static files, to reduce slug size:
    # https://whitenoise.readthedocs.io/en/latest/django.html#WHITENOISE_KEEP_ONLY_HASHED_FILES
    WHITENOISE_KEEP_ONLY_HASHED_FILES = True


    # No database configuration needed


class Development(Base):
    DEBUG = True
    ALLOWED_HOSTS = ['.localhost', '127.0.0.1', '[::1]']


class Staging(Base):
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = False
    ALLOWED_HOSTS = ['.toolforge.org',]


class Production(Base):
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = False
    ALLOWED_HOSTS = ['.toolforge.org',]









